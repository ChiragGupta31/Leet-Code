class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        long long int n=heights.size();
        vector<long long int> left(n);
        vector<long long int> right(n);
        
        stack<int> s;
        for(int i=0;i<n;i++){
            if(s.empty()){
                left[i]=0;
                s.push(i);
            }
            else{
                while(!s.empty() && heights[s.top()]>=heights[i]){
                    s.pop();
                }
                if(s.empty())
                    left[i]=0;
                else{
                    left[i]=s.top()+1;
                }
                s.push(i);
            }
        }
        
        while(!s.empty()){
            s.pop();
            
        }
        
        for(int i=n-1;i>=0;i--){
            if(s.empty()){
                right[i]=n-1;
                s.push(i);
            }
            else{
                while(!s.empty() && heights[s.top()]>=heights[i]){
                    s.pop();
                }
                if(s.empty())
                    right[i]=n-1;
                else{
                    right[i]=s.top()-1;
                }
                s.push(i);
            }
        }
        
        long long int max_area=0;
        for(int i=0;i<n;i++){
            long long int area=(right[i]-left[i]+1)*(heights[i]);
            max_area=max(max_area,area);
        }
        return max_area;
        
        
        
        
    }
};
